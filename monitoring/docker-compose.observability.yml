version: '3.8'

services:
  # Prometheus - metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: voc-prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - voc-network
    restart: unless-stopped

  # Grafana - visualization
  grafana:
    image: grafana/grafana:latest
    container_name: voc-grafana
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3001:3000"
    networks:
      - voc-network
    depends_on:
      - prometheus
    restart: unless-stopped

  # Langfuse - LLM observability
  langfuse:
    image: langfuse/langfuse:latest
    container_name: voc-langfuse
    ports:
      - "3002:3000"
    environment:
      # Auth
      - NEXTAUTH_SECRET=${LANGFUSE_NEXTAUTH_SECRET}
      - NEXTAUTH_URL=http://localhost:3002
      # Database
      - DATABASE_URL=postgresql://${LANGFUSE_DB_USER:-langfuse}:${LANGFUSE_DB_PASSWORD:-langfuse}@langfuse-db:5432/${LANGFUSE_DB_NAME:-langfuse}
      # CORS
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:3002
      # SMTP (optional but recommended for user management)
      - SMTP_HOST=${LANGFUSE_SMTP_HOST:-""}
      - SMTP_PORT=${LANGFUSE_SMTP_PORT:-587}
      - SMTP_USER=${LANGFUSE_SMTP_USER:-""}
      - SMTP_PASSWORD=${LANGFUSE_SMTP_PASSWORD:-""}
      - SMTP_FROM=${LANGFUSE_SMTP_FROM:-"notifications@yourdomain.com"}
    networks:
      - voc-network
    depends_on:
      - langfuse-db
    restart: unless-stopped

  # PostgreSQL for Langfuse
  langfuse-db:
    image: postgres:15
    container_name: voc-langfuse-db
    environment:
      - POSTGRES_USER=${LANGFUSE_DB_USER:-langfuse}
      - POSTGRES_PASSWORD=${LANGFUSE_DB_PASSWORD:-langfuse}
      - POSTGRES_DB=${LANGFUSE_DB_NAME:-langfuse}
    volumes:
      - langfuse_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - voc-network
    restart: unless-stopped

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: voc-otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./monitoring/otel/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # metrics endpoint
      - "8889:8889"   # Prometheus exporter
      - "13133:13133" # health check
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "55679:55679" # zpages extension
    networks:
      - voc-network
    restart: unless-stopped

  # Jaeger - distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: voc-jaeger
    ports:
      - "16686:16686"  # UI
      - "14250:14250"  # Collector
      - "14268:14268"  # Collector HTTP
      - "6831:6831/udp"  # Agent
      - "6832:6832/udp"  # Agent
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    networks:
      - voc-network
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:
  langfuse_db_data:

networks:
  voc-network:
    external: true
